name: Build/release

on:
  push:
    tags:
      - "v*"

jobs:
  extract_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Extract version number
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      
  build:
    runs-on: ${{ matrix.os }}
    needs: [extract_version]
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            script: electron:build:macos
            asset_name: Pokemon Ranger-${{needs.extract_version.outputs.version}}.dmg
          - os: ubuntu-latest
            script: electron:build:linux
            asset_name: Pokemon Ranger-${{needs.extract_version.outputs.version}}.AppImage
          - os: windows-latest
            script: electron:build:windows
            asset_name: Pokemon Ranger Setup ${{needs.extract_version.outputs.version}}.exe
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
      
      - name: Install dependencies
        run: yarn

      - name: Build Electron app
        run: yarn ${{matrix.script}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.asset_name}}
          path: ./dist/${{matrix.asset_name}}

  release:
    runs-on: ubuntu-latest
    needs: [extract_version, build]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

  add_artifacts:
    runs-on: ubuntu-latest
    needs: [extract_version, build, release]
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            asset_name: Pokemon Ranger-${{needs.extract_version.outputs.version}}.dmg
          - os: ubuntu-latest
            asset_name: Pokemon Ranger-${{needs.extract_version.outputs.version}}.AppImage
          - os: windows-latest
            asset_name: Pokemon Ranger Setup ${{needs.extract_version.outputs.version}}.exe
    steps:
    - uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{matrix.asset_name}}

    - name: Upload Artifact to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./${{matrix.asset_name}}
        asset_name: ${{matrix.asset_name}}
        asset_content_type: application/octet-stream
