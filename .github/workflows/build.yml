name: Build/release

on:
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  build:
    runs-on: ${{ matrix.os }}
    env:
      RANGER_ELECTRON: 1
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            script: electron:build:macos
            asset_name: Pokemon Ranger-${{github.ref_name}}-arm64.dmg
          - os: ubuntu-latest
            script: electron:build:linux
            asset_name: Pokemon Ranger-${{github.ref_name}}.AppImage
          - os: windows-latest
            script: electron:build:windows
            asset_name: Pokemon Ranger Setup ${{github.ref_name}}.exe
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
      
      - name: Install dependencies
        run: yarn

      - name: Build Electron app
        run: yarn ${{matrix.script}}

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.asset_name }}.zip
          asset_name: ${{ matrix.asset_name }}.zip
          asset_content_type: application/octet-stream
